=============================================================================
Inicio da execucao: programa que implementa o detector de falhas vCube
Prof. Elias P. Duarte Jr.  -  Disciplina Sistemas Distribuidos
=============================================================================
Inicializei 7 processos
Inicializei o vetor State[] de cada processo
Escalonei os testes iniciais de todos os processos
Escalonei uma falha de todos os processo pares no tempo 31.0
Escalonei um recovery de todos os processo pares no tempo 91.0
Escalonei uma falha do processo 3 ao 6 no tempo 121.0
Escalonei uma falha do recovery 3 ao 6 no tempo 181.0
Inicio dos eventos da simulacao
o processo 0 eh o primeiro correto em C(1,1) e testou o processo 1 no tempo  30.0 e ele estava correto
o processo 0 eh o primeiro correto em C(2,2) e testou o processo 2 no tempo  30.0 e ele estava correto
o processo 0 eh o primeiro correto em C(4,3) e testou o processo 4 no tempo  30.0 e ele estava correto
State[0] : { 0  0  0  0  0  0  0 }
o processo 1 eh o primeiro correto em C(0,1) e testou o processo 0 no tempo  30.0 e ele estava correto
o processo 1 eh o primeiro correto em C(3,2) e testou o processo 3 no tempo  30.0 e ele estava correto
o processo 1 eh o primeiro correto em C(5,3) e testou o processo 5 no tempo  30.0 e ele estava correto
State[1] : { 0  0  0  0  0  0  0 }
o processo 2 eh o primeiro correto em C(3,1) e testou o processo 3 no tempo  30.0 e ele estava correto
o processo 2 eh o primeiro correto em C(0,2) e testou o processo 0 no tempo  30.0 e ele estava correto
o processo 2 eh o primeiro correto em C(6,3) e testou o processo 6 no tempo  30.0 e ele estava correto
State[2] : { 0  0  0  0  0  0  0 }
o processo 3 eh o primeiro correto em C(2,1) e testou o processo 2 no tempo  30.0 e ele estava correto
o processo 3 eh o primeiro correto em C(1,2) e testou o processo 1 no tempo  30.0 e ele estava correto
State[3] : { 0  0  0  0  0  0  0 }
o processo 4 eh o primeiro correto em C(5,1) e testou o processo 5 no tempo  30.0 e ele estava correto
o processo 4 eh o primeiro correto em C(6,2) e testou o processo 6 no tempo  30.0 e ele estava correto
o processo 4 eh o primeiro correto em C(0,3) e testou o processo 0 no tempo  30.0 e ele estava correto
State[4] : { 0  0  0  0  0  0  0 }
o processo 5 eh o primeiro correto em C(4,1) e testou o processo 4 no tempo  30.0 e ele estava correto
o processo 5 eh o primeiro correto em C(1,3) e testou o processo 1 no tempo  30.0 e ele estava correto
State[5] : { 0  0  0  0  0  0  0 }
o processo 6 eh o primeiro correto em C(4,2) e testou o processo 4 no tempo  30.0 e ele estava correto
o processo 6 eh o primeiro correto em C(5,2) e testou o processo 5 no tempo  30.0 e ele estava correto
o processo 6 eh o primeiro correto em C(2,3) e testou o processo 2 no tempo  30.0 e ele estava correto
o processo 6 eh o primeiro correto em C(3,3) e testou o processo 3 no tempo  30.0 e ele estava correto
State[6] : { 0  0  0  0  0  0  0 }
Terminou uma rodada de testes!!
o processo 0 falhou no tempo  31.0
o processo 2 falhou no tempo  31.0
o processo 4 falhou no tempo  31.0
o processo 6 falhou no tempo  31.0
o processo 1 eh o primeiro correto em C(0,1) e testou o processo 0 no tempo  60.0 e ele estava falho
o processo 1 eh o primeiro correto em C(3,2) e testou o processo 3 no tempo  60.0 e ele estava correto
o processo 1 eh o primeiro correto em C(2,2) e testou o processo 2 no tempo  60.0 e ele estava falho
o processo 1 eh o primeiro correto em C(5,3) e testou o processo 5 no tempo  60.0 e ele estava correto
o processo 1 eh o primeiro correto em C(4,3) e testou o processo 4 no tempo  60.0 e ele estava falho
State[1] : { 1  0  1  0  1  0  0 }
o processo 3 eh o primeiro correto em C(2,1) e testou o processo 2 no tempo  60.0 e ele estava falho
o processo 3 eh o primeiro correto em C(1,2) e testou o processo 1 no tempo  60.0 e ele estava correto
o processo 3 eh o primeiro correto em C(0,2) e testou o processo 0 no tempo  60.0 e ele estava falho
o processo 3 eh o primeiro correto em C(6,3) e testou o processo 6 no tempo  60.0 e ele estava falho
State[3] : { 1  0  1  0  1  0  1 }
o processo 5 eh o primeiro correto em C(4,1) e testou o processo 4 no tempo  60.0 e ele estava falho
A latencia do evento de falha do processo 4 foi de 1 rodadas e contou com 10 testes
o processo 5 eh o primeiro correto em C(6,2) e testou o processo 6 no tempo  60.0 e ele estava falho
o processo 5 eh o primeiro correto em C(1,3) e testou o processo 1 no tempo  60.0 e ele estava correto
A latencia do evento de falha do processo 0 foi de 1 rodadas e contou com 12 testes
A latencia do evento de falha do processo 2 foi de 1 rodadas e contou com 12 testes
o processo 5 eh o primeiro correto em C(0,3) e testou o processo 0 no tempo  60.0 e ele estava falho
o processo 5 eh o primeiro correto em C(3,3) e testou o processo 3 no tempo  60.0 e ele estava correto
o processo 5 eh o primeiro correto em C(2,3) e testou o processo 2 no tempo  60.0 e ele estava falho
State[5] : { 1  0  1  0  1  0  1 }
Terminou uma rodada de testes!!
o processo 1 eh o primeiro correto em C(0,1) e testou o processo 0 no tempo  90.0 e ele estava falho
o processo 1 eh o primeiro correto em C(3,2) e testou o processo 3 no tempo  90.0 e ele estava correto
A latencia do evento de falha do processo 6 foi de 1 rodadas e contou com 17 testes
o processo 1 eh o primeiro correto em C(2,2) e testou o processo 2 no tempo  90.0 e ele estava falho
o processo 1 eh o primeiro correto em C(5,3) e testou o processo 5 no tempo  90.0 e ele estava correto
o processo 1 eh o primeiro correto em C(4,3) e testou o processo 4 no tempo  90.0 e ele estava falho
State[1] : { 1  0  1  0  1  0  1 }
o processo 3 eh o primeiro correto em C(2,1) e testou o processo 2 no tempo  90.0 e ele estava falho
o processo 3 eh o primeiro correto em C(1,2) e testou o processo 1 no tempo  90.0 e ele estava correto
o processo 3 eh o primeiro correto em C(0,2) e testou o processo 0 no tempo  90.0 e ele estava falho
o processo 3 eh o primeiro correto em C(6,3) e testou o processo 6 no tempo  90.0 e ele estava falho
State[3] : { 1  0  1  0  1  0  1 }
o processo 5 eh o primeiro correto em C(4,1) e testou o processo 4 no tempo  90.0 e ele estava falho
o processo 5 eh o primeiro correto em C(6,2) e testou o processo 6 no tempo  90.0 e ele estava falho
o processo 5 eh o primeiro correto em C(1,3) e testou o processo 1 no tempo  90.0 e ele estava correto
o processo 5 eh o primeiro correto em C(0,3) e testou o processo 0 no tempo  90.0 e ele estava falho
o processo 5 eh o primeiro correto em C(3,3) e testou o processo 3 no tempo  90.0 e ele estava correto
o processo 5 eh o primeiro correto em C(2,3) e testou o processo 2 no tempo  90.0 e ele estava falho
State[5] : { 1  0  1  0  1  0  1 }
Terminou uma rodada de testes!!
o processo 0 recuperou no tempo  91.0
o processo 2 recuperou no tempo  91.0
o processo 4 recuperou no tempo  91.0
o processo 6 recuperou no tempo  91.0
o processo 0 eh o primeiro correto em C(1,1) e testou o processo 1 no tempo  92.0 e ele estava correto
o processo 0 eh o primeiro correto em C(2,2) e testou o processo 2 no tempo  92.0 e ele estava correto
o processo 0 eh o primeiro correto em C(4,3) e testou o processo 4 no tempo  92.0 e ele estava correto
State[0] : { 0  0  2  0  2  0  1 }
o processo 2 eh o primeiro correto em C(3,1) e testou o processo 3 no tempo  92.0 e ele estava correto
o processo 2 eh o primeiro correto em C(0,2) e testou o processo 0 no tempo  92.0 e ele estava correto
o processo 2 eh o primeiro correto em C(6,3) e testou o processo 6 no tempo  92.0 e ele estava correto
State[2] : { 2  0  0  0  2  0  2 }
o processo 4 eh o primeiro correto em C(5,1) e testou o processo 5 no tempo  92.0 e ele estava correto
o processo 4 eh o primeiro correto em C(6,2) e testou o processo 6 no tempo  92.0 e ele estava correto
o processo 4 eh o primeiro correto em C(0,3) e testou o processo 0 no tempo  92.0 e ele estava correto
State[4] : { 2  0  2  0  0  0  2 }
o processo 6 eh o primeiro correto em C(4,2) e testou o processo 4 no tempo  92.0 e ele estava correto
o processo 6 eh o primeiro correto em C(5,2) e testou o processo 5 no tempo  92.0 e ele estava correto
o processo 6 eh o primeiro correto em C(2,3) e testou o processo 2 no tempo  92.0 e ele estava correto
o processo 6 eh o primeiro correto em C(3,3) e testou o processo 3 no tempo  92.0 e ele estava correto
State[6] : { 2  0  2  0  2  0  0 }
o processo 1 eh o primeiro correto em C(0,1) e testou o processo 0 no tempo 120.0 e ele estava correto
o processo 1 eh o primeiro correto em C(3,2) e testou o processo 3 no tempo 120.0 e ele estava correto
o processo 1 eh o primeiro correto em C(5,3) e testou o processo 5 no tempo 120.0 e ele estava correto
State[1] : { 2  0  2  0  2  0  1 }
o processo 3 eh o primeiro correto em C(2,1) e testou o processo 2 no tempo 120.0 e ele estava correto
o processo 3 eh o primeiro correto em C(1,2) e testou o processo 1 no tempo 120.0 e ele estava correto
State[3] : { 2  0  2  0  2  0  2 }
o processo 5 eh o primeiro correto em C(4,1) e testou o processo 4 no tempo 120.0 e ele estava correto
A latencia do evento de recovery do processo 0 foi de 1 rodadas e contou com 19 testes
A latencia do evento de recovery do processo 2 foi de 1 rodadas e contou com 19 testes
A latencia do evento de recovery do processo 4 foi de 1 rodadas e contou com 19 testes
o processo 5 eh o primeiro correto em C(1,3) e testou o processo 1 no tempo 120.0 e ele estava correto
State[5] : { 2  0  2  0  2  0  2 }
Terminou uma rodada de testes!!
o processo 3 falhou no tempo 121.0
o processo 4 falhou no tempo 121.0
o processo 5 falhou no tempo 121.0
o processo 6 falhou no tempo 121.0
o processo 0 eh o primeiro correto em C(1,1) e testou o processo 1 no tempo 122.0 e ele estava correto
o processo 0 eh o primeiro correto em C(2,2) e testou o processo 2 no tempo 122.0 e ele estava correto
o processo 0 eh o primeiro correto em C(4,3) e testou o processo 4 no tempo 122.0 e ele estava falho
State[0] : { 0  0  2  0  3  0  2 }
o processo 2 eh o primeiro correto em C(3,1) e testou o processo 3 no tempo 122.0 e ele estava falho
o processo 2 eh o primeiro correto em C(0,2) e testou o processo 0 no tempo 122.0 e ele estava correto
o processo 2 eh o primeiro correto em C(1,2) e testou o processo 1 no tempo 122.0 e ele estava correto
o processo 2 eh o primeiro correto em C(6,3) e testou o processo 6 no tempo 122.0 e ele estava falho
State[2] : { 2  0  0  1  3  0  3 }
o processo 1 eh o primeiro correto em C(0,1) e testou o processo 0 no tempo 150.0 e ele estava correto
A latencia do evento de falha do processo 4 foi de 1 rodadas e contou com 8 testes
o processo 1 eh o primeiro correto em C(3,2) e testou o processo 3 no tempo 150.0 e ele estava falho
o processo 1 eh o primeiro correto em C(5,3) e testou o processo 5 no tempo 150.0 e ele estava falho
State[1] : { 2  0  2  1  3  1  2 }
Terminou uma rodada de testes!!
o processo 0 eh o primeiro correto em C(1,1) e testou o processo 1 no tempo 152.0 e ele estava correto
A latencia do evento de falha do processo 3 foi de 2 rodadas e contou com 11 testes
o processo 0 eh o primeiro correto em C(2,2) e testou o processo 2 no tempo 152.0 e ele estava correto
o processo 0 eh o primeiro correto em C(4,3) e testou o processo 4 no tempo 152.0 e ele estava falho
State[0] : { 0  0  2  1  3  1  3 }
o processo 2 eh o primeiro correto em C(3,1) e testou o processo 3 no tempo 152.0 e ele estava falho
o processo 2 eh o primeiro correto em C(0,2) e testou o processo 0 no tempo 152.0 e ele estava correto
A latencia do evento de falha do processo 5 foi de 2 rodadas e contou com 15 testes
o processo 2 eh o primeiro correto em C(1,2) e testou o processo 1 no tempo 152.0 e ele estava correto
o processo 2 eh o primeiro correto em C(6,3) e testou o processo 6 no tempo 152.0 e ele estava falho
State[2] : { 2  0  0  1  3  1  3 }
o processo 1 eh o primeiro correto em C(0,1) e testou o processo 0 no tempo 180.0 e ele estava correto
A latencia do evento de falha do processo 6 foi de 1 rodadas e contou com 18 testes
o processo 1 eh o primeiro correto em C(3,2) e testou o processo 3 no tempo 180.0 e ele estava falho
o processo 1 eh o primeiro correto em C(5,3) e testou o processo 5 no tempo 180.0 e ele estava falho
State[1] : { 2  0  2  1  3  1  3 }
Terminou uma rodada de testes!!
o processo 3 recuperou no tempo 181.0
o processo 4 recuperou no tempo 181.0
o processo 5 recuperou no tempo 181.0
o processo 6 recuperou no tempo 181.0
o processo 0 eh o primeiro correto em C(1,1) e testou o processo 1 no tempo 182.0 e ele estava correto
o processo 0 eh o primeiro correto em C(2,2) e testou o processo 2 no tempo 182.0 e ele estava correto
o processo 0 eh o primeiro correto em C(4,3) e testou o processo 4 no tempo 182.0 e ele estava correto
State[0] : { 0  0  2  1  4  1  3 }
o processo 2 eh o primeiro correto em C(3,1) e testou o processo 3 no tempo 182.0 e ele estava correto
o processo 2 eh o primeiro correto em C(0,2) e testou o processo 0 no tempo 182.0 e ele estava correto
o processo 2 eh o primeiro correto em C(6,3) e testou o processo 6 no tempo 182.0 e ele estava correto
State[2] : { 2  0  0  2  4  1  4 }
o processo 3 eh o primeiro correto em C(2,1) e testou o processo 2 no tempo 182.0 e ele estava correto
o processo 3 eh o primeiro correto em C(1,2) e testou o processo 1 no tempo 182.0 e ele estava correto
State[3] : { 2  0  2  0  4  1  4 }
o processo 4 eh o primeiro correto em C(5,1) e testou o processo 5 no tempo 182.0 e ele estava correto
o processo 4 eh o primeiro correto em C(6,2) e testou o processo 6 no tempo 182.0 e ele estava correto
o processo 4 eh o primeiro correto em C(0,3) e testou o processo 0 no tempo 182.0 e ele estava correto
o processo 4 eh o primeiro correto em C(1,3) e testou o processo 1 no tempo 182.0 e ele estava correto
o processo 4 eh o primeiro correto em C(2,3) e testou o processo 2 no tempo 182.0 e ele estava correto
State[4] : { 2  0  2  2  0  1  4 }
o processo 5 eh o primeiro correto em C(4,1) e testou o processo 4 no tempo 182.0 e ele estava correto
o processo 5 eh o primeiro correto em C(1,3) e testou o processo 1 no tempo 182.0 e ele estava correto
o processo 5 eh o primeiro correto em C(0,3) e testou o processo 0 no tempo 182.0 e ele estava correto
State[5] : { 2  0  2  2  4  0  4 }
o processo 6 eh o primeiro correto em C(4,2) e testou o processo 4 no tempo 182.0 e ele estava correto
o processo 6 eh o primeiro correto em C(5,2) e testou o processo 5 no tempo 182.0 e ele estava correto
o processo 6 eh o primeiro correto em C(2,3) e testou o processo 2 no tempo 182.0 e ele estava correto
o processo 6 eh o primeiro correto em C(3,3) e testou o processo 3 no tempo 182.0 e ele estava correto
State[6] : { 2  0  2  2  4  2  0 }
o processo 1 eh o primeiro correto em C(0,1) e testou o processo 0 no tempo 210.0 e ele estava correto
A latencia do evento de recovery do processo 4 foi de 1 rodadas e contou com 21 testes
o processo 1 eh o primeiro correto em C(3,2) e testou o processo 3 no tempo 210.0 e ele estava correto
o processo 1 eh o primeiro correto em C(5,3) e testou o processo 5 no tempo 210.0 e ele estava correto
State[1] : { 2  0  2  2  4  2  4 }
Terminou uma rodada de testes!!
